; Loading modules

; First let's load Hardware device
[hw_USBtin]
port = auto         ; Serial port
debug = 1           ; debug level (default 0)
speed = 500         ; bus speed (500, 1000)

; Load stat module. We need it to detect new IDs
[mod_uniqPrint]     

; Load ping module, to generate malformed CAN frames with different ID
; this module deactivated
[gen_ping]
start_id = 313    ; Bruteforce range from 313 to 999
end_id   = 999    ; 
active = false    ; Module deactivated first
debug = 1


; Now let's describe the logic of this test
[MITM]

hw_USBtin = {'action':'read','pipe':2}       ; Read packet from CAN (into pipe 2)

mod_uniqPrint = {'pipe':2}                   ; module to collect stats about message (from pipe2)

gen_ping  = {'pipe':1}                      ; we will generate requests to pipe 1 !
hw_USBtin!1 = {'action':'write','pipe':1}   ; write frames generated by gen_ping (from pipe 1)


;;;;;;; let's see how it looks like from console...
; > python cansploit.py -c can_ping_discovery.py
;
; hw_USBtin: Init phase started...
; hw_USBtin: Port found: COM14
; hw_USBtin: PORT: COM14
; hw_USBtin: Speed: 500
; hw_USBtin: USBtin device found!
; >> s                                                     ; Start loop 
;
; >> c mod_uniqPrint p                                     ; print stats of what we have 
;
; BUS     LEN     ID              MESSAGE                 COUNT
; 60      8       276             1122334455667788        2
; 60      8       277             1122334455667788        4
; >> c mod_uniqPrint m 0                                   ; After a while insert mark and enable alert mode... so then any new foun ID will be printed to output
; >> c mod_uniqPrint p                                     ; let's check what we have for now.
;
; BUS     LEN     ID              MESSAGE                 COUNT
; 60      8       276             1122334455667788        128
; 60      8       277             1122334455667788        278
; 60      8       277             1122334455661111        2
; 0       0       0               4d41524b                1     ; This is a mark inserted
; >> c gen_ping s                                               ; now start ID bruteforce with 
; Active status: True
; New ID found: 888  (BUS: 60)                                  ; here we got new ID
; gen_ping: Loop finished 
; >> c mod_uniqPrint p                                     ; let's check what we have for now.
;
; BUS     LEN     ID              MESSAGE                 COUNT
; 60      8       276             1122334455667788        230
; 60      8       277             1122334455667788        461
; 60      8       277             1122334455661111        9
; 0       0       0               4d41524b                1     ; This is a mark inserted before
; 60      8       888             ff00000000000000        1     ; THIS is detected ID...