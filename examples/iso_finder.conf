; Loading modules

; First let's load Hardware device
[hw_CANBusTriple]
port = auto          ; Serial port, COM3 or path.. auto also could work there
bus_1 = 1            ; CAN bus for IO
;bus_2 = 2           ; CAN bus to IO, if not commented or not equal to bus_1 then can be enough for MITM (one module mitm)
debug = 2            ; debug level (default 0)
speed = 500          ; this device support AutoRate, use auto for that

; Load stat module. We need it to detect new IDs
[mod_stat]
file = iso.csv
format = csv


; Now let's describe the logic of this test
[MITM]

hw_CANBusTriple = {'action':'read','pipe':2}       ; Read packet from CAN (into pipe 2)

mod_stat = {'pipe':2}                              ; module to collect stats about message (from pipe2)



;;;;;;; let's see how it looks like from the console...
; > python cansploit.py -c iso_finder.conf
;
; hw_USBtin: Init phase started...
; hw_USBtin: Port found: COM14
; hw_USBtin: PORT: COM14
; hw_USBtin: Speed: 500
; hw_USBtin: USBtin device found!
; >> s                                                     ; Start loop
;
; >> c mod_stat p                                         ; print stats of what we have
;
; BUS     LEN     ID              MESSAGE                 COUNT
; 0      8       276             1122334455667788        24
; 0      8       277             1122334455667788        4
; 0      8       542999          1025000000000000        3
; 0      8       542999          2101020304050607        3
; 0      8       542999          2201020304050607        3
; 0      8       542999          2311121314151617        3
; 0      8       542999          24a1a2a3a4a5a6a7        3
; 0      4       542999          25112233                3
; >> stop                                                   ; pause siniffing (or ctrl-c)
; >> c mod_stat a                                           ; let's do analyses of captured packets
; ISO TP Messages:
;        ID 542999 and length 37
; >> c gen_ping i                                           ; let's dum ISO-TP message to file